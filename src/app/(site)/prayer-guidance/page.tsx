/**
 * Prayer Guidance Main Page
 * Path: /prayer-guidance
 * 
 * This is the main landing page for the prayer guidance section of the application.
 * It showcases various prayer-related features and tools available to users.
 * 
 * Components:
 * - Breadcrumb: Navigation breadcrumb
 * - Feature Cards: Grid of available prayer features
 * 
 * Authentication:
 * - Partially protected (some features require login)
 * - Shows different UI states for logged-in vs anonymous users
 * 
 * Features Displayed:
 * 1. AI Generated Prayer (/prayer-guidance/generate-message)
 *    - Creates personalized prayers using AI
 * 
 * 2. Spiritual Guidance (/prayer-guidance/spiritual-guidance)
 *    - Provides AI-powered spiritual insights
 * 
 * 3. Personal Prayer Journal (/prayer-guidance/journal)
 *    - Allows users to maintain prayer records
 * 
 * 4. Prayer Reminders (/prayer-guidance/prayer-remainder)
 *    - Manages prayer notification settings
 * 
 * 5. Community Prayer (/community/prayers)
 *    - Facilitates prayer sharing and discussions
 * 
 * UI Features:
 * - Responsive grid layout (1-4 columns based on screen size)
 * - Hover animations and visual effects
 * - Dark/light mode support
 * - Call-to-action buttons for key features
 * 
 * State Management:
 * - Uses NextAuth session for authentication state
 * - Conditional rendering based on auth status
 */

import React from 'react';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/lib/auth';
import { Metadata } from 'next';
import Breadcrumb from '@/components/Breadcrumb';
import Link from 'next/link';
import { 
  PenTool, 
  Heart, 
  MessageSquare, 
  Lightbulb,
  Calendar,
  Users,
  Clock,
  BookOpen,
  Brain,
  Sparkles,
  ScrollText,
  BookMarked
} from 'lucide-react';

export const metadata: Metadata = {
  title: 'Prayer Guidance | CStudios',
  description: 'Receive AI-powered prayer guidance and spiritual support for your daily walk with God.',
};

const prayerFeatures = [
  {
    title: "AI Generated Prayer ",
    description: "Receive personalized prayers generated by our AI spiritual companion.",
    icon: Sparkles,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
    href: "/prayer-guidance/generate-message"
  },
  {
    title: "Spiritual Guidance",
    description: "Get thoughtful reflections and spiritual insights on your prayers.",
    icon: Brain,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
    href: "/prayer-guidance/spiritual-guidance"
  },
  {
    title: "Personal Prayer Journal",
    description: "Keep track of your prayers and spiritual journey over time.",
    icon: PenTool,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
    href: "/prayer-guidance/journal"
  },
  {
    title: "Prayer Reminders",
    description: "Set reminders for daily prayer time and spiritual reflection.",
    icon: Clock,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
    href: "/prayer-guidance/prayer-remainder"
  },
  {
    title: "Prayer Templates",
    description: "Access various prayer templates for different situations and needs.",
    icon: ScrollText,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
  },
  {
    title: "Community Prayer",
    description: "Share prayers and connect with others in the faith community.",
    icon: Users,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
  },
  {
    title: "Prayer Discussions",
    description: "Engage in meaningful discussions about prayer and faith.",
    icon: MessageSquare,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
    href: "/community/prayers"
  },
  {
    title: "Daily Devotionals",
    description: "Receive daily devotional content to enhance your prayer life.",
    icon: Calendar,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
    href: "/prayer-guidance/daily-devotionals"
  },
  {
    title: "Prayer Groups",
    description: "Join or create prayer groups for collective spiritual support.",
    icon: Users,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
  },
  {
    title: "Prayer History",
    description: "Review your prayer history and track your spiritual growth.",
    icon: Clock,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
  },
  {
    title: "Prayer Insights",
    description: "Gain deeper understanding through AI-powered prayer analysis.",
    icon: Lightbulb,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
  },
  {
    title: "Favorite Prayers",
    description: "Save and organize your favorite prayers for easy access.",
    icon: BookMarked,
    color: "text-gray-300 dark:text-gray-300 light:text-black",
    bgColor: "bg-light-4 dark:bg-gray-900",
  }
];

export default async function PrayerGuidancePage() {
  const session = await getServerSession(authOptions);

  return (
    <>
      <Breadcrumb pageTitle="Prayer Guidance" />
      <div className="container mx-auto px-4 py-8">
        <div className="mb-12">
          <p className="text-center text-gray-300 dark:text-gray-300 light:text-black max-w-2xl mx-auto">
            Enhance your prayer life with AI-powered guidance, create personal prayer collections,
            and connect with a community of believers in meaningful prayer experiences.
          </p>
          <div className="flex justify-between items-center mb-8">
              <h2 className="text-2xl font-semibold text-white dark:text-white light:text-black"></h2>
              <Link
                href="/prayer-guidance/generate-message"
                className="button-border-gradient hover:button-gradient-hover relative inline-flex items-center gap-1.5 rounded-lg px-4 py-2 text-sm text-white dark:text-white light:text-black shadow-button hover:shadow-none"
              >
                New Prayer
                <PenTool className="h-4 w-4" />
              </Link>
            </div>
        </div>

        {session ? (
          <div className="mb-12">
            
            
            <div 
              className="relative rounded-xl bg-[url(/images/cta/grid.svg)] p-6 mb-8 border border-gray-300/20 dark:border-gray-600/20 shadow-lg transform hover:-translate-y-1 hover:shadow-xl transition-all"
              style={{
                boxShadow: 'inset -8px -8px 16px rgba(0,0,0,0.1), inset 8px 8px 16px rgba(255,255,255,0.1), 0 4px 24px rgba(0, 0, 0, 0.1)',
                transform: 'perspective(1000px) rotateX(2deg)'
              }}
            >
              <div className="relative z-10">
                <p className="text-gray-400 dark:text-gray-400 light:text-black text-center transform hover:-translate-y-0.5 transition-transform">
                  Start your prayer journey by creating a new prayer or joining a prayer group.
                </p>
              </div>
              <div className="absolute inset-0 rounded-xl bg-gradient-to-br from-white/5 via-transparent to-black/5 pointer-events-none" />
            </div>
          </div>
        ) : (
          <div className="text-center mb-12">
            <Link
              href="/auth/login"
              className="button-border-gradient hover:button-gradient-hover relative inline-flex items-center gap-1.5 rounded-lg px-6 py-3 text-white dark:text-white light:text-black shadow-button hover:shadow-none"
            >
              Log In to Start Praying
              <svg
                width="16"
                height="16"
                viewBox="0 0 16 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className="dark:fill-white light:fill-black"
              >
                <path
                  d="M14.4002 7.60002L9.2252 2.35002C9.0002 2.12502 8.6502 2.12502 8.4252 2.35002C8.2002 2.57502 8.2002 2.92502 8.4252 3.15002L12.6252 7.42502H2.0002C1.7002 7.42502 1.4502 7.67502 1.4502 7.97502C1.4502 8.27502 1.7002 8.55003 2.0002 8.55003H12.6752L8.4252 12.875C8.2002 13.1 8.2002 13.45 8.4252 13.675C8.5252 13.775 8.6752 13.825 8.8252 13.825C8.9752 13.825 9.1252 13.775 9.2252 13.65L14.4002 8.40002C14.6252 8.17502 14.6252 7.82503 14.4002 7.60002Z"
                />
              </svg>
            </Link>
          </div>
        )}

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
          {prayerFeatures.map((feature) => (
            <div
              key={feature.title}
              className="relative rounded-xl bg-[url(/images/cta/grid.svg)] p-8 h-full transition-all border border-gray-300/20 dark:border-gray-600/20 shadow-lg transform hover:-translate-y-1 hover:shadow-xl"
              style={{
                boxShadow: 'inset -8px -8px 16px rgba(0,0,0,0.1), inset 8px 8px 16px rgba(255,255,255,0.1), 0 4px 24px rgba(0, 0, 0, 0.1)',
                transform: 'perspective(1000px) rotateX(2deg)'
              }}
            >
              <div className="relative z-10">
                <div className={`relative flex h-16 w-16 items-center justify-center rounded-full ${feature.bgColor} mb-6 border border-black/10 transform hover:scale-105 transition-transform`}>
                  <div className="absolute inset-0 rounded-full bg-gradient-to-tr from-black/50 via-transparent to-white/20" />
                  <div className="absolute inset-[2px] rounded-full bg-gradient-to-br from-white/10 via-transparent to-black/30" />
                  <div className="absolute inset-[1px] rounded-full ring-1 ring-white/10 shadow-inner" />
                  <div className="absolute inset-0 rounded-full shadow-lg" />
                  <feature.icon className={`h-8 w-8 ${feature.color} relative z-10 drop-shadow-lg`} />
                </div>
                {feature.href ? (
                  <Link href={feature.href} className="block">
                    <h3 className="text-xl font-semibold text-white dark:text-white light:text-black mb-4 transform hover:-translate-y-0.5 transition-transform">
                      {feature.title}
                    </h3>
                    <p className="text-gray-400 dark:text-gray-400 light:text-black/80 transform hover:-translate-y-0.5 transition-transform">
                      {feature.description}
                    </p>
                  </Link>
                ) : (
                  <>
                    <h3 className="text-xl font-semibold text-white dark:text-white light:text-black mb-4 transform hover:-translate-y-0.5 transition-transform">
                      {feature.title}
                    </h3>
                    <p className="text-gray-400 dark:text-gray-400 light:text-black/80 transform hover:-translate-y-0.5 transition-transform">
                      {feature.description}
                    </p>
                  </>
                )}
              </div>
              <div className="absolute inset-0 rounded-xl bg-gradient-to-br from-white/5 via-transparent to-black/5 pointer-events-none" />
            </div>
          ))}
        </div>
      </div>
    </>
  );
} 